;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; Copyright (C) 2006, Johns Hopkins University.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or
;; without modification, are permitted provided that the following
;; conditions are met:
;;
;;   - Redistributions of source code must contain the above 
;;     copyright notice, this list of conditions, and the following
;;     disclaimer. 
;;
;;   - Redistributions in binary form must reproduce the above
;;     copyright notice, this list of conditions, and the following
;;     disclaimer in the documentation and/or other materials 
;;     provided with the distribution.
;;
;;   - Neither the names of the copyright holders nor the names of any
;;     of any contributors may be used to endorse or promote products
;;     derived from this software without specific prior written
;;     permission. 
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
;; "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
;; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
;; A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
;; OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
;; SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
;; LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
;; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
;; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
;; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
;; OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(bitc-version "0.10")
(import bitc.main as main)
(provide bitc.main main)

(define i0 (the int32 0))
 
(deftypeclass (TC2 'a 'b)
 @: (fn 'a 'b -> bool)
 )

(forall ((TC2 'a 'b)) (defstruct (S2 'a 'b) f1:'a f2:'b))
(forall ((TC2 'a 'b)) (defunion  (U2 'a 'b)
			u1
			(u2 a:'a b:'b)
			(u3 r:(U2 'a 'b))))
	
(forall ((TC2 'a 'b)) (deftypeclass (TC3 'a 'b 'c)
			$: (fn 'a 'b -> 'c)
			))

(definstance (TC2 'a 'a) (@ = (lambda (x y) #t)))

(forall ((TC2 'a 'b)) (proclaim abc: (fn 'a 'b -> bool)))

(forall ((TC2 'a 'b)) (define abc:(fn 'a 'b -> bool) 
			(lambda (x y) #t))) 

(define Q @)
 
(define main.main:(fn (vector string) -> int32)
  (lambda (argvec)
  (S2 i0 i0)
  (u2 #t #f)
  (abc 25:int32 30:int32)
  i0))



