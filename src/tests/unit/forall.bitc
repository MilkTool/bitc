//////////////////////////////////////////////////////////////////////////
//
// Copyright (C) 2006, Johns Hopkins University.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or
// without modification, are permitted provided that the following
// conditions are met:
//
//   - Redistributions of source code must contain the above 
//     copyright notice, this list of conditions, and the following
//     disclaimer. 
//
//   - Redistributions in binary form must reproduce the above
//     copyright notice, this list of conditions, and the following
//     disclaimer in the documentation and/or other materials 
//     provided with the distribution.
//
//   - Neither the names of the copyright holders nor the names of any
//     of any contributors may be used to endorse or promote products
//     derived from this software without specific prior written
//     permission. 
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
//////////////////////////////////////////////////////////////////////////

bitc version 0.11
import bitc.main as main
provide bitc.main main

def i0 = 0:int32
 
trait TC2('a,'b)
is *!*: fn('a,'b) -> bool

boxed struct S2('a, 'b)
  forall TC2('a, 'b)
is f1:'a
   f2:'b

boxed union U2('a, 'b)
  forall TC2('a, 'b)
is u1
   u2 is a:'a
         b:'b
   u3 is r: U2('a,'b)

trait TC3('a, 'b, 'c)
  forall TC2('a, 'b) 
is $ : fn('a, 'b) -> 'c

instance TC2('a, 'a)
is *!* = lambda (x, y) true

def abc: fn('a, 'b) -> bool
  forall TC2('a, 'b)

def abc: fn('a, 'b) -> bool
  forall TC2('a, 'b) =
  lambda(x,y) {true}

def Q = *!*

def main.main(argvec: string[])
in
  S2(i0, i0)
  u2(true, false)  
  i0



