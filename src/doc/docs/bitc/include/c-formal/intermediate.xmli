<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE figure PUBLIC "-//EROS Group//DTD OSDoc XML V0.1//EN"
               "http://www.coyotos.org/OSDoc/DTD/osdoc-0.1.dtd" [
]>
  <sect1 id="intermediate"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:btypes="http://www.bitc-lang.org/DTD/bitc/0.1/bitc-types.dtd">
  <title>Intermediate Declarative System</title> 
  <definition id="constraint-colection-ext-int">
    <title>Constraint Collection over Intermediate Derivation</title>
    <p>
      Similar to 
      <btypes:TYPE>
	<defn tag="constraint-colection-ext-typ"/>
      </btypes:TYPE>, we write
      <btypes:TYPE>
	<spset>
	  <TEjudge name="d">
	    <assume>
	      <gamma/>
	      <store/>
	    </assume>
	    <conclude>
	      <tqExpr>
		<aExpr/>
		<type/>
	      </tqExpr>
	    </conclude>
	    <constrain>
	      <dCtset/>
	    </constrain>
	  </TEjudge>
	</spset>
      </btypes:TYPE> to denote the set of all constrained types and
      unconstrained type variables used in the derivation of 
      <btypes:TYPE>
	<TEjudge name="d">
	  <assume>
	    <gamma/>
	    <store/>
	  </assume>
	  <conclude>
	    <tqExpr>
	      <aExpr/>
	      <type/>
	    </tqExpr>
	  </conclude>
	  <constrain>
	    <aCtset/>
	  </constrain>
	</TEjudge>
      </btypes:TYPE>.
    </p>
  </definition>
  <definition id="canon-ts">
    <title>Type Scheme Canonicalization</title>
    <p>
      We define the set of removable type variables as:
    </p>
    <example>
      <p>
	<btypes:TYPE>
	  <eq>
	    <pred name="rtv">
	      <dCtset/>
	    </pred>
	    <ftvs>
	      <set>
		<grouping>
		  <Forall/>
		  <in>
		    <Pcst>
		      <lKind k="mono"/>
		      <type num="g"/>
		      <type num="s"/>
		    </Pcst>
		    <dCtset/>
		  </in>
		</grouping>
	      </set>
	    </ftvs>
	  </eq>
	</btypes:TYPE>
      </p>
    </example> 
    <p>
      Now, we define a transformation of type schemes and binding
      environments that transform constrained type schemes into
      unconstrained ones.
    </p>
    <btypes:TYPE>
      <Hrules>
	<tyRule>
	  <tyPre>
	    <eq>
	      <aTS/>
	      <TS>
		<tvars/>
		<ctype>
		  <type/>
		  <dCtset/>
		</ctype>
	      </TS>
	    </eq>
	    <eq>
	      <tvars name="beta"/>
	      <diff>
		<paren>
		  <inter>
		    <set>
		      <tvars/>
		    </set>
		    <ftvs>
		      <type/>
		    </ftvs>
		  </inter>
		</paren>
		<pred name="remtv">
		  <dCtset/>
		</pred>
	      </diff>
	    </eq>
	  </tyPre>
	  <tyConc>
	    <eq>
	      <canonical>
		<aTS/>
	      </canonical>
	      <TS>
		<tvars name="beta"/>
		<type/>
	      </TS>
	    </eq>
	  </tyConc>
	</tyRule>
      </Hrules>
      <Hrules>
	<tyRule>
	  <tyPre>
	    <grouping>
	      <Forall/>
	      <in>
		<mapping>
		  <id/>
		  <aTS/>
		</mapping>
		<gamma/>
	      </in>
	      <text content=", "/>
	      <in>
		<mapping>
		  <id/>
		  <canonical>
		    <aTS/>
		  </canonical>
		</mapping>
		<gamma dash="'"/>
	      </in>
	    </grouping>
	  </tyPre>
	  <tyConc>
	    <eq>
	      <canonical>
		<gamma/>
	      </canonical>
	      <gamma dash="'"/>
	    </eq>
	  </tyConc>
	</tyRule>
      </Hrules>
    </btypes:TYPE>
  </definition>
  <definition id="inter-notation">
    <title>Consistent Intermediate Derivation</title>
    <p>
      We define the following derivations for notational convenience:
    </p>
    <btypes:TYPE>
      <Hrules>
	<tyRule>
	  <tyPre>
	    <TEjudge name="d">
	      <assume>
		<gamma/>
		<store/>
	      </assume>
	      <conclude>
		<tqExpr>                      
		  <aExpr/>
		  <type/>
		</tqExpr>
	      </conclude>
	      <constrain>
		<dCtset/>
	      </constrain>
	    </TEjudge>
	    <Sat>
	      <bCtset/>
	      <spset>
		<TEjudge name="d">
		  <assume>
		    <gamma/>
		    <store/>
		  </assume>
		  <conclude>
		    <tqExpr>                      
		      <aExpr/>
		      <type/>
		    </tqExpr>
		  </conclude>
		  <constrain>
		    <dCtset/>
		  </constrain>
		</TEjudge>
	      </spset>
	    </Sat>
	  </tyPre>
	  <tyConc>
	    <TEjudge name="d">
	      <assume>
		<bCtset/>
		<gamma/>
		<store/>
	      </assume>
	      <conclude>
		<tqExpr>                      
		  <aExpr/>
		  <type/>
		</tqExpr>
	      </conclude>
	      <constrain>
		<dCtset/>
	      </constrain>
	    </TEjudge>
	  </tyConc>
	</tyRule>
      </Hrules>
      <Hrules>
	<tyRule>
	  <tyPre>
	    <TEjudge name="d">
	      <assume>
		<gamma/>
		<store/>
	      </assume>
	      <conclude>
		<tqExpr>                      
		  <aExpr/>
		  <type/>
		</tqExpr>
	      </conclude>
	      <constrain>
		<dCtset/>
	      </constrain>
	    </TEjudge>
	    <CST sp="yes">
	      <TEjudge name="d">
		<assume>
		  <gamma/>
		  <store/>
		</assume>
		<conclude>
		  <tqExpr>                      
		    <aExpr/>
		    <type/>
		  </tqExpr>
		</conclude>
		<constrain>
		  <dCtset/>
		</constrain>
	      </TEjudge>
	    </CST>
	  </tyPre>
	  <tyConc>
	    <TEjudge name="d*">
	      <assume>
		<bCtset/>
		<gamma/>
		<store/>
	      </assume>
	      <conclude>
		<tqExpr>                      
		  <aExpr/>
		  <type/>
		</tqExpr>
	      </conclude>
	      <constrain>
		<dCtset/>
	      </constrain>
	    </TEjudge>
	  </tyConc>
	</tyRule>
      </Hrules>
    </btypes:TYPE>
  </definition>
  <theorem id="inter-sound">
    <title>Soundness of Intermediate System</title>
    <p>
      If 
      <btypes:TYPE>
	<TEjudge name="d">
	  <assume>
	    <bCtset/>
	    <gamma/>
	    <store/>
	  </assume>
	  <conclude>
	    <tqExpr>
	      <aExpr/>
	      <type/>
	    </tqExpr>
	  </conclude>
	  <constrain>
	    <dCtset/>
	  </constrain>
	</TEjudge>
      </btypes:TYPE> and
      <btypes:TYPE>
	<models name="sol">
	  <Empty/>
	  <dCtset/>
	</models>
      </btypes:TYPE>, then
      <btypes:TYPE>
	<Sjudge>
	  <assume>
	    <bCtset/>
	    <gamma/>
	    <store/>
	  </assume>
	  <tqExpr>
	    <aExpr/>
	    <type/>
	  </tqExpr>
	</Sjudge>
      </btypes:TYPE>.
    </p>
  </theorem>
  <proof>
    <p>
      By induction on the derivation of 
      <btypes:TYPE>
	<TEjudge name="d">
	  <assume>
	    <bCtset/>
	    <gamma/>
	    <store/>
	  </assume>
	  <conclude>
	    <tqExpr>
	      <aExpr/>
	      <type/>
	    </tqExpr>
	  </conclude>
	  <constrain>
	    <dCtset/>
	  </constrain>
	</TEjudge>
      </btypes:TYPE>.      
    </p>
  </proof>
  <theorem id="inter-complete">
    <title>Completeness of Intermediate System</title>
    <p>
      If 
      <btypes:TYPE>
	<Sjudge>
	  <assume>
	    <bCtset/>
	    <gamma/>
	    <store/>
	  </assume>
	  <tqExpr>
	    <aExpr/>
	    <type/>
	  </tqExpr>
	</Sjudge>
      </btypes:TYPE>, then
      <btypes:TYPE>
	<Exists>
	  <dCtset/>
	</Exists>
      </btypes:TYPE> such that
      <btypes:TYPE>
	<TEjudge name="d">
	  <assume>
	    <bCtset/>
	    <gamma/>
	    <store/>
	  </assume>
	  <conclude>
	    <tqExpr>
	      <aExpr/>
	      <type/>
	    </tqExpr>
	  </conclude>
	  <constrain>
	    <dCtset/>
	  </constrain>
	</TEjudge>
      </btypes:TYPE> and
      <btypes:TYPE>
	<models name="sol">
	  <Empty/>
	  <dCtset/>
	</models>
      </btypes:TYPE>.
    </p>
  </theorem>
  <proof>
    <p>
      By induction on the derivation of 
      <btypes:TYPE>
	<Sjudge>
	  <assume>
	    <bCtset/>
	    <gamma/>
	    <store/>
	  </assume>
	  <tqExpr>
	    <aExpr/>
	    <type/>
	  </tqExpr>
	</Sjudge>
      </btypes:TYPE>.
    </p>
  </proof>
</sect1>
