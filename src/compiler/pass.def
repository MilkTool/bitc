/* -*- Mode: c -*- */
/*
 * Copyright (C) 2005, The EROS Group, LLC.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or
 * without modification, are permitted provided that the following
 * conditions are met:
 *
 *   - Redistributions of source code must contain the above 
 *     copyright notice, this list of conditions, and the following
 *     disclaimer. 
 *
 *   - Redistributions in binary form must reproduce the above
 *     copyright notice, this list of conditions, and the following
 *     disclaimer in the documentation and/or other materials 
 *     provided with the distribution.
 *
 *   - Neither the names of the copyright holders nor the names of any
 *     of any contributors may be used to endorse or promote products
 *     derived from this software without specific prior written
 *     permission. 
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

//   ident          name           description
PASS(none,          "<none>",       "<none>")
PASS(parse,         "parser",       "Parsing")
//Remove redundant begins, simplify local defines
PASS(reprSimp,      "reprsimp",     "Defrepr Simplification")
PASS(beginSimp,     "beginsimp",    "Some simplifications in the begining")
PASS(methDecl,      "methdecl",     "Inject method function proclaims")
PASS(symresolve,    "symresolve",   "Symbol Resolution")
PASS(typeCheck,     "typecheck",    "Type Checking")
PASS(locCheck,      "loccheck",     "Location semantics Checking")
PASS(reprCheck,     "reprcheck",    "Defrepr Consistency Checking")
PASS(noAllocCheck,  "noalloccheck", "No Dynamic Allocation -- Checking")
PASS(initCheck,     "initcheck",    "Initialization Restriction Checking")
PASS(HoistInstLam,  "instlam",      "Hoist instance lambdas")
PASS(npass,         "<npass>",      "<none>")
#undef PASS
